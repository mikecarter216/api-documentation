{
  "openapi": "3.0.0",
  "info": {
    "title": "W05 Final Project API",
    "version": "1.0.0",
    "description": "API for managing users and themes with JWT authentication."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Theme",
      "description": "Operations about theme"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of users" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Bad request" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User data" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Bad request" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "User deleted" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/theme": {
      "get": {
        "tags": ["Theme"],
        "summary": "Get all themes",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of themes" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["Theme"],
        "summary": "Create a theme",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Theme" }
            }
          }
        },
        "responses": {
          "201": { "description": "Theme created" },
          "400": { "description": "Bad request" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/theme/{themeName}": {
      "get": {
        "tags": ["Theme"],
        "summary": "Get theme by name",
        "parameters": [
          {
            "name": "themeName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Theme data" },
          "404": { "description": "Theme not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "tags": ["Theme"],
        "summary": "Update theme by name",
        "parameters": [
          {
            "name": "themeName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Theme" }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Theme updated" },
          "400": { "description": "Bad request" },
          "404": { "description": "Theme not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["Theme"],
        "summary": "Delete theme by name",
        "parameters": [
          {
            "name": "themeName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "Theme deleted" },
          "404": { "description": "Theme not found" },
          "500": { "description": "Server error" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "michaelakpan216"
          },
          "fullName": {
            "type": "string",
            "example": "Michael Akpan"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "michaelakpan216@gmail.com"
          }
        },
        "required": ["username", "email"]
      },
      "Theme": {
        "type": "object",
        "properties": {
          "themeName": {
            "type": "string",
            "example": "DarkMode"
          },
          "color": {
            "type": "string",
            "example": "black"
          },
          "layout": {
            "type": "string",
            "example": "grid"
          }
        },
        "required": ["themeName"]
      }
    }
  }
}
